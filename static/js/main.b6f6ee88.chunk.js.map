{"version":3,"sources":["components/FriendCard/index.js","components/Score/index.js","components/Title/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","clickedImage","id","alt","name","src","image","position","team","Score","title","score","highScore","Title","children","Wrapper","shuffle","array","i","length","j","Math","floor","random","App","state","friends","showAlert","showSuccess","clickedIcons","setState","indexOf","push","console","log","handleIncrement","makeShuffle","style","opacity","this","map","key","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"89GA2BeA,MAvBf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,YAAYC,QAAS,kBAAMF,EAAMG,aAAaH,EAAMI,MACjE,yBAAKH,UAAU,iBACb,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnC,yBAAKP,UAAU,WACb,4BACE,4BACE,yCADF,IAC0BD,EAAMM,MAEhC,4BACE,+CADF,IACgCN,EAAMS,UAEtC,4BACE,6CADF,IAC8BT,EAAMU,UCD/BC,MAhBf,SAAeX,GACb,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,OACb,yBAAKA,UAAU,iCAAgC,4BAAKD,EAAMY,QAC1D,yBAAKX,UAAU,kCAAiC,0CAAgBD,EAAMa,QACtE,yBAAKZ,UAAU,kCAAiC,8CAAoBD,EAAMc,aAE5E,yBAAKb,UAAU,OACf,yBAAKA,UAAU,mCACf,0HCNSc,MAJf,SAAef,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMgB,WCGvBC,MAJf,SAAiBjB,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMgB,W,MCOzC,SAASE,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,E,IAwGMO,E,4MAjGbC,MAAQ,CACNC,UACAf,MAAO,EACPC,UAAW,EACXe,UAAW,EACXC,YAAa,EACbC,aAAc,I,EAGhB5B,aAAe,SAAAC,GACb,IAAI2B,EAAe,EAAKJ,MAAMI,aAC1BlB,EAAQ,EAAKc,MAAMd,MACnBC,EAAY,EAAKa,MAAMb,UAC3B,EAAKkB,SAAS,CACZH,UAAW,KAGqB,IAA9BE,EAAaE,QAAQ7B,IACvB2B,EAAaG,KAAK9B,GAClB+B,QAAQC,IAAIL,GAEZ,EAAKM,kBACL,EAAKC,eACyB,KAArB,EAAKX,MAAMd,MACpB,EAAKmB,SAAS,CACZF,YAAa,EACbjB,MAAO,EACPkB,aAAc,MAGhB,EAAKC,SAAS,CACZnB,MAAO,EACPkB,aAAc,KAEhBI,QAAQC,IAAI,aACZ,EAAKJ,SAAS,CACZH,UAAW,KAIXhB,EAAQC,GACV,EAAKkB,SAAS,CACZlB,UAAWD,K,EAKjBwB,gBAAkB,WAChB,EAAKL,SAAS,CAAEnB,MAAO,EAAKc,MAAMd,MAAQ,K,EAG5CyB,YAAc,WACZ,EAAKN,SAAS,CAAEJ,QAASV,EAAQU,M,uDAGzB,IAAD,OACP,OACE,yBAAK3B,UAAU,aACb,yBACEA,UAAU,qBACVsC,MAAO,CAAEC,QAASC,KAAKd,MAAME,YAF/B,0CAMA,yBACE5B,UAAU,sBACVsC,MAAO,CAAEC,QAASC,KAAKd,MAAMG,cAF/B,gBAMA,kBAAC,EAAD,CACEf,MAAM,cACNF,MAAO4B,KAAKd,MAAMd,MAClBC,UAAW2B,KAAKd,MAAMb,YAExB,kBAAC,EAAD,oBACA,kBAAC,EAAD,KACA,yBAAKb,UAAU,OACZwC,KAAKd,MAAMC,QAAQc,KAAI,SAAAd,GAAO,OAC7B,kBAAC,EAAD,CACEe,IAAKf,EAAQxB,GACbA,GAAIwB,EAAQxB,GACZE,KAAMsB,EAAQtB,KACdG,SAAUmB,EAAQnB,SAClBC,KAAMkB,EAAQlB,KACdF,MAAOoB,EAAQpB,MACfL,aAAc,EAAKA,yB,GAxFfyC,aCflBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b6f6ee88.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\"\r\n\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card item\" onClick={() => props.clickedImage(props.id)}>\r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <ul>\r\n          <li>\r\n            <strong>Name:</strong> {props.name}\r\n          </li>\r\n          <li>\r\n            <strong>Occupation:</strong> {props.position}\r\n          </li>\r\n          <li>\r\n            <strong>Location:</strong> {props.team}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;","import React from \"react\";\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <header className=\"scoreB\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 col-left text-center\"><h5>{props.title}</h5></div>\r\n        <div className=\"col-md-3 col-right text-center\"><h6>High Score {props.score}</h6></div>\r\n        <div className=\"col-md-3 col-right text-center\"><h6>Current Score: {props.highScore}</h6></div>\r\n      </div>\r\n      <div className=\"row\">\r\n      <div className=\"col-md-12 col-right text-center\">\r\n      <h6>Click a friend, but only once! Try to hit as many new friends to get a new high score!</h6></div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Score;","import React from \"react\";\r\n\r\nfunction Title(props) {\r\n  return <h1 className=\"title\">{props.children}</h1>;\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from \"react\";\nimport friends from \"./friends.json\";\nimport FriendCard from './components/FriendCard';\nimport Score from './components/Score';\nimport Title from './components/Title';\nimport Wrapper from './components/Wrapper';\nimport \"./style.css\"\n\n\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\n\n\nclass App extends Component {\n  //set this.state.friends to friends json\n  state = {\n    friends,\n    score: 0, \n    highScore: 0, \n    showAlert: 0, \n    showSuccess: 0, \n    clickedIcons: []\n  };\n\n  clickedImage = id => {\n    let clickedIcons = this.state.clickedIcons; \n    let score = this.state.score; \n    let highScore = this.state.highScore; \n    this.setState({\n      showAlert: 0\n    });\n\n    if (clickedIcons.indexOf(id) === -1) {\n      clickedIcons.push(id);\n      console.log(clickedIcons);\n\n      this.handleIncrement();\n      this.makeShuffle();\n    } else if (this.state.score === 12) {\n      this.setState({\n        showSuccess: 1, \n        score: 0, \n        clickedIcons: []\n      });\n    } else {\n      this.setState({\n        score: 0, \n        clickedIcons: []\n      });\n      console.log(\"duplicate\");\n      this.setState({\n        showAlert: 1\n      });\n    }\n\n    if (score > highScore) {\n      this.setState({\n        highScore: score\n      });\n    }\n  };\n\n  handleIncrement = () => {\n    this.setState({ score: this.state.score + 1 });\n  }; \n\n  makeShuffle = () => {\n    this.setState({ friends: shuffle(friends) });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div\n          className=\"alert alert-danger\"\n          style={{ opacity: this.state.showAlert }}\n        >\n          You clicked somebody twice! Try again!\n        </div>\n        <div\n          className=\"alert alert-success\"\n          style={{ opacity: this.state.showSuccess }}\n        >\n          Keep going!!\n        </div>\n        <Score\n          Title=\"clicky game\"\n          score={this.state.score}\n          highScore={this.state.highScore}\n        />\n        <Title>Clicky Game</Title>\n        <Wrapper>\n        <div className=\"row\">\n          {this.state.friends.map(friends => (\n            <FriendCard\n              key={friends.id}\n              id={friends.id}\n              name={friends.name}\n              position={friends.position}\n              team={friends.team}\n              image={friends.image}\n              clickedImage={this.clickedImage}\n            />\n          ))}\n        </div>\n        </Wrapper>\n      </div>\n    );\n  }\n\n}\n\nexport default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}